<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		creationComplete="User_creationCompleteHandler(event)" title="{strTitle}" viewActivate="User_viewActivateHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.events.FlexEvent;
			
			import spark.events.ViewNavigatorEvent;
			import spark.globalization.StringTools;
			
			[Bindable]
			private var strTitle:String;
			
			[Bindable]
			private var _user:User = new User();
			
			private var _myCam:CameraUI;
			//variabile appoggio per la gestione file immagine card acquisita
			private var _dataSource:IDataInput;
			
			private var _mediaPromise:MediaPromise;

			//variabile appoggio per link all'immagine profilo
			private var strImage:String;			
			[Bindable]
			private var arrUserApp:Array = new Array();
			
			protected function User_creationCompleteHandler(event:FlexEvent):void
			{
				ControlloUtente();
				PopoloInfo();
				txtusr_nome.setFocus();
			}
			
			private function CatturaFoto(e:Event):void {
				_myCam.launch(MediaType.IMAGE);
			}
			
			//inizializzo la gestione camera dell'ipad al caricamento del modulo
			private function User_viewActivateHandler(e:ViewNavigatorEvent):void
			{
				if (CameraUI.isSupported){
					_myCam = new CameraUI();
					_myCam.addEventListener(MediaEvent.COMPLETE, onCameraComplete);
				}
			}			
			
			//definisco l'evento di completamento acquisizione immagine da camera
			private function onCameraComplete(e:MediaEvent):void
			{
				var cameraUI:CameraUI = e.target as CameraUI;
				_mediaPromise = e.data; // contiene riferimento all'immagine con nativepath
				strImage = _mediaPromise.file.url;
				var mpLoader:Loader = new Loader();
				mpLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, onMediaLoaded);
				mpLoader.loadFilePromise(_mediaPromise);
			}
			
			private function onMediaLoaded(e:Event):void
			{
				var mpLoaderInfo:LoaderInfo = e.target as LoaderInfo;
				mpLoaderInfo.removeEventListener(Event.COMPLETE, onMediaLoaded);
				imgProfilo.source = mpLoaderInfo.loader;
			}
			
			private function ControlloUtente():void {
				if(_user.status() == true){
					
				} else {
					
				}
			}
			
			protected function UpdateUser():void
			{
				if(txtusr_nome.text.length > 0 && txtusr_cogn.text.length > 0){
					if(txtusr_link.text.length > 0){
						if(txtusr_link.text.indexOf("http://") == -1 && txtusr_link.text.indexOf("https://") == -1){
							txtusr_link.text="http://"+txtusr_link.text;
						}
					}
					if(_user.callquery('update tabella_utenti '+
						'set usr_nome = "'+txtusr_nome.text+'",usr_cogn = "'+txtusr_cogn.text+'", usr_faco = "'+txtusr_faco.text+'", usr_link = "'+txtusr_link.text+'", usr_imag = "' + strImage +
						'" where usr_codi = '+arrUserApp[0].usr_codi,null)){
						PopoloInfo();
						lblUpdate.setStyle("color","#33FF33");
						lblUpdate.text="Aggiornamento Completato !";
					}else{
						lblUpdate.setStyle("color","#FF0000");
						lblUpdate.text="Errore nell'Aggiornamento dell'Utente !";
					}
				}else{
					lblUpdate.setStyle("color","#FF0000");
					lblUpdate.text="Attenzione Digitare Nome e Cognome del profilo !";
				}
			}
			
			protected function PopoloInfo():void{
				arrUserApp=_user.getinfo();
				strTitle="Profilo - "+arrUserApp[0].usr_nome + " " + arrUserApp[0].usr_cogn;
				
				txtusr_nome.text=arrUserApp[0].usr_nome;
				txtusr_cogn.text=arrUserApp[0].usr_cogn;
				txtusr_faco.text=arrUserApp[0].usr_faco != null ? arrUserApp[0].usr_faco : '';
				txtusr_link.text=arrUserApp[0].usr_link != null ? arrUserApp[0].usr_link : '';
				imgProfilo.source = arrUserApp[0].usr_imag != null ? arrUserApp[0].usr_imag : '';
				
			}
			
			
			
			protected function link_clickHandler(event:MouseEvent):void
			{
				if(txtusr_link.text.length > 0){
					navigateToURL(new URLRequest(txtusr_link.text),"_blank");
				}
			}
			
			private function imgProfilo_ioError(e:IOErrorEvent):void {
				imgProfilo.source = null;
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="Profilo"/>
		<s:State name="ConfProfilo"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:VGroup left.Profilo="0" top.Profilo="0" bottom.Profilo="1" width.Profilo="598">
		
	
	<s:TextInput id="txtusr_nome" y="64" width="100%" height="50" fontSize="20" maxChars="100"
				 prompt="Nome" tabIndex="1"
				 width.Profilo="100%"/>
	<s:TextInput id="txtusr_cogn" width="100%" height="50" fontSize="20" maxChars="100"
				 prompt="Cognome" tabIndex="2"
				 width.Profilo="100%"/>
	<s:TextInput id="txtusr_faco" width="100%" height="50" fontSize="20" maxChars="100"
				 prompt="Facoltà" tabIndex="3"
				 width.Profilo="100%"/>
	<s:HGroup width="100%"
			  width.Profilo="598">
		<s:TextInput id="txtusr_link" width="100%" height="50" fontSize="20" maxChars="100"
					 prompt="Link facoltà" tabIndex="4"
					 width.Profilo="537"/>
		<s:Image width="50" height="50" buttonMode="true" click="link_clickHandler(event)"
				 source="image/arrow1.png" tabEnabled="false" useHandCursor="true"/>
	</s:HGroup>
	<s:HGroup bottom="10" width="100%" horizontalAlign="center" tabEnabled="false">
		<s:Button label="Aggiorna" click="UpdateUser()" fontSize="20"/>
	</s:HGroup>
	<s:HGroup bottom="10" width="100%" horizontalAlign="center" tabEnabled="false">
		<s:Label id="lblUpdate" height="50" fontSize="17"/>
	</s:HGroup>
	</s:VGroup>
	<s:Image id="imgProfilo" y="10" height="159" scaleMode="letterbox" smooth="true"
			 x.ConfProfilo="488" width.ConfProfilo="184"
			 y.Profilo="0" left.Profilo="606" right.Profilo="0"
			 ioError.Profilo="imgProfilo_ioError(event)"/>
	<s:Button y="177" width="184" label="Scatta" click="CatturaFoto(event)"
			  x.ConfProfilo="488"
			  y.Profilo="167" left.Profilo="606" width.Profilo="194"/>
</s:View>
